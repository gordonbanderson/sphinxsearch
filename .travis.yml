language: php

#This appears to be the only option at time of writing
sudo: required
dist: trusty

env:
  global:
    - COMPOSER_ROOT_VERSION=4.0.x-dev

matrix:
  include:
    - php: 5.6
      env: DB=MYSQL PHPCS_TEST=1 PHPUNIT_TEST=1
    - php: 7.0
      env: DB=MYSQL PHPUNIT_TEST=1
    - php: 7.1
      env: DB=MYSQL PHPUNIT_COVERAGE_TEST=1
    - php: 7.2
      env: DB=PGSQL PHPUNIT_TEST=1


before_script:
  - sudo apt-get -qq update

  - sudo apt-cache search mysql | grep dev

  # jq for composer.json manipulation, reset for sphinxsearch
  - sudo apt-get install -y jq build-essential libmysqlclient-dev



  #Double check OS version
  - cat /etc/issue

  # Init PHP
  - phpenv rehash
  - phpenv config-rm xdebug.ini

  # Install composer dependencies - copied from https://github.com/silverstripe/silverstripe-campaign-admin/blob/1.0/.travis.yml
  - ls -lh
  - composer validate
  - composer require --prefer-dist --no-update silverstripe/recipe-cms:1.1.x-dev

  # Make minimum stability dev
  - cat composer.json | jq --arg minstability dev '. + {"minimum-stability":$minstability}' > composer.tmp && mv composer.tmp composer.json

  - if [[ $DB == PGSQL ]]; then composer require --prefer-dist --no-update silverstripe/postgresql:2.0.x-dev; fi
  - if [[ $DB == SQLITE ]]; then composer require --prefer-dist --no-update silverstripe/sqlite3:2.0.x-dev; fi
  - if [[ $PHPCS_TEST ]]; then composer global require squizlabs/php_codesniffer:^3 --prefer-dist --no-interaction --no-progress --no-suggest -o; fi
  - composer install --prefer-dist --no-interaction --no-progress --no-suggest --optimize-autoloader --verbose --profile

  # 14.04 package fails to start for Sphinx 2.3.2 beta, as such build from source :(
  - git clone https://github.com/sphinxsearch/sphinx.git build
  - cd build
  - ./configure
  - make
  - sudo make install
  - cd ..
  - rm -rf build


after_success:
  - if [[ $PHPUNIT_COVERAGE_TEST ]]; then bash <(curl -s https://codecov.io/bash) -f coverage.xml; fi


script:
  - if [[ $PHPUNIT_TEST ]]; then echo 'T2' && vendor/bin/phpunit; fi
  - if [[ $PHPUNIT_COVERAGE_TEST ]]; then phpdbg -qrr vendor/bin/phpunit --coverage-clover=coverage.xml; fi
  - if [[ $PHPCS_TEST ]]; then vendor/bin/phpcs --standard=vendor/silverstripe/framework/phpcs.xml.dist src/; fi

after_success:
  - if [[ $PHPUNIT_COVERAGE_TEST ]]; then bash <(curl -s https://codecov.io/bash) -f coverage.xml; fi
