# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/var/www

    branches:
      only:
        - master
        - testing

    steps:
      - run: whoami
      - run: git clone https://github.com/gordonbanderson/sphinxsearch.git -b testing

      #See https://discuss.circleci.com/t/could-not-get-lock-var-lib-apt-lists-lock/28337
      - run: sudo killall -9 apt-get || true
      - run: sudo killall -9 apt || true
      - run: sudo dpkg -l | grep desktop
      - run: sudo apt-get -y remove google-chrome-beta/stable google-chrome-stable/stable google-chrome-unstable/stable
      - run: sudo apt-get -y update
      - run: sudo apt-get -y upgrade
      - run: sudo apt-get install wget mariadb mariadb-client ca-certificates curl \
          libapache2-mod-php7.3/stable php-cli php-intl php-mb3 php-gd
      - run: wget https://github.com/manticoresoftware/manticoresearch/releases/download/3.3.0/manticore_3.3.0-200204-01fc8ad1-release.buster_amd64-bin.deb &&  dpkg -i manticore_3.3.0-200204-01fc8ad1-release.buster_amd64-bin.deb && rm manticore_3.3.0-200204-01fc8ad1-release.buster_amd64-bin.deb
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer validate
      - run: composer require --prefer-source --no-update silverstripe/recipe-cms:4.x-dev
      - run: composer install --prefer-source --no-interaction --no-progress --no-suggest --optimize-autoloader --verbose --profile


      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # run test,upload coverage
      #- run: vendor/bin/phpstan analyze code
      - run: phpdbg -qrr vendor/bin/phpunit -d memory_limit=4G --coverage-clover=coverage.xml tests/
      - run: bash <(curl -s https://codecov.io/bash) -f coverage.xml

