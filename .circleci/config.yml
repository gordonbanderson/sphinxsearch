# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: brettt89/silverstripe-web:7.1-platform
        environment:
          - SS_DATABASE_CLASS=MySQLPDODatabase
          - SS_DATABASE_SERVER=127.0.0.1
          - SS_DATABASE_USERNAME=root
          - SS_DATABASE_PASSWORD=ubuntu
          - SS_DATABASE_NAME=circle_test
          - SS_ENVIRONMENT_TYPE=dev
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=root
          - MYSQL_ROOT_PASSWORD=ubuntu
          - MYSQL_DATABASE=circle_test
          - MYSQL_HOST=127.0.0.1

    working_directory: ~/var/www

    branches:
      only:
        - master
        - testing

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: cd /tmp && git clone https://github.com/manticoresoftware/manticore.git && apt-get install build-essential cmake unixodbc-dev libpq-dev libexpat-dev libmysqlclient-dev libicu-dev libssl-dev libboost-system-dev libboost-program-options-dev git flex bison
      - run: mkdir build && cd build && cmake3 -D WITH_MYSQL=1 WITH_PGSQL=1 -DWITH_RE2=1 ../manticore
      - run: cd -
      - run: composer validate
      - run: composer require --prefer-source --no-update silverstripe/recipe-cms:4.x-dev
      - run: composer install --prefer-source --no-interaction --no-progress --no-suggest --optimize-autoloader --verbose --profile
      - run: composer require --prefer-source --no-interaction silverstripe/widgets



      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # run test,upload coverage
      #- run: vendor/bin/phpstan analyze code
      - run: phpdbg -qrr vendor/bin/phpunit -d memory_limit=4G --coverage-clover=coverage.xml tests/
      - run: bash <(curl -s https://codecov.io/bash) -f coverage.xml

